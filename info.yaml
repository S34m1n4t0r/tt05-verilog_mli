--- 
# Tiny Tapeout project information
project:
  wokwi_id:    0        # If using wokwi, set this to your project's ID

# If using an HDL, set wokwi_id as 0 and uncomment and list your source files here. 
# Source files must be in ./src and you must list each source file separately
  source_files:        
    - tt_um_state_monitor.v
  top_module:  "tt_um_state_monitor"      # Put the name of your top module here, must start with "tt_um_". Make it unique by including your github username

# How many tiles your design occupies? A single tile is about 167x108 uM.
  tiles: "1x1"    # Valid values: 1x1, 1x2, 2x2, 3x2, 4x2 or 8x2

# Keep a track of the submission yaml
yaml_version: 4

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it. This info will be automatically collected and used to make a datasheet for the chip.
#
# Here is a great example: https://github.com/davidsiaw/tt02-davidsiaw-stackcalc/blob/38c5647f83aad2aec675d566aa3d67b98f0aac81/info.yaml
documentation: 
  author:       "Sean Dalton"      # Your name
  title:        "Signal monitor (Verilog Demo)"      # Project title
  language:     "Verilog" # other examples include Verilog, Amaranth, VHDL, etc
  description:  "Monitor the state of input signals and display changes"      # Short description of what your project does

# Longer description of how the project works. You can use standard markdown format.
  how_it_works: |
      Signal monitor, can be used to monitor the state of up to four individual signals and visualize the state via outputs. 

      The valid polarity can be setup for each input individually.

      If the expected signal state is exited, the mismatch is displayed for a configureable duration.

      This can be used as a visual monitor of short state changes of electrical signals.

      The design runs on a 10 kHz clock, and allows delay settings of 1s to 16s.
      ```
            ______     __________
      in0         \___/
           ______________________
      pol0
                  ___
      in1 _______/   \___________
          
      pol1 ______________________

          _______            ____
      out1       \__________/

          _______            ____
      out2       \__________/
      ```
# Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  how_to_test:  |
      After reset, the counter should increase by one every second with a 10MHz input clock.
      Experiment by changing the inputs to change the counting speed.

# A description of what the inputs do (e.g. red button, SPI CLK, SPI MOSI, etc).
  inputs:               
    - monitored input 0
    - monitored input 1
    - monitored input 2
    - monitored input 3
    - input polarity 0
    - input polarity 1
    - input polarity 2
    - input polarity 3
# A description of what the outputs do (e.g. status LED, SPI MISO, etc)
  outputs:
    - monitor state valid 0
    - monitor state valid 1
    - monitor state valid 2
    - monitor state valid 3
    - monitor state invalid 0
    - monitor state invalid 1
    - monitor state invalid 2
    - monitor state invalid 3
# A description of what the bidirectional I/O pins do (e.g. I2C SDA, I2C SCL, etc)
  bidirectional:
    - unused
    - unused
    - unused
    - unused
    - delay setting 0
    - delay setting 1
    - delay setting 2
    - delay setting 3

# The following fields are optional
  tag:          "timer, test, utility"      # comma separated list of tags: test, encryption, experiment, clock, animation, utility, industrial, pwm, fpga, alu, microprocessor, risc, riscv, sensor, signal generator, fft, filter, music, bcd, sound, serial, timer, random number generator, calculator, decoder, counter, puzzle, multiplier, game, oscillator,
  external_hw:  ""      # Describe any external hardware needed
  discord:      "S34m1n4t0r"      # Your discord handle, used for communication and automatically assigning tapeout role after a submission
  doc_link:     ""      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     10000       # Clock frequency in Hz (if required)
  picture:      ""      # relative path to a picture in your repository (must be 512kb or less)
